{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"li",
				"libera_grafo"
			],
			[
				"mos",
				"mostra_adjacentes"
			],
			[
				"ins",
				"insere_aresta"
			],
			[
				"de",
				"delay"
			],
			[
				"cr",
				"cria_grafo"
			],
			[
				"IN",
				"instance"
			],
			[
				"e",
				"Euro"
			],
			[
				"d",
				"Dolar"
			],
			[
				"CO",
				"cotacaoRealDolar"
			],
			[
				"cot",
				"cotacaoEuroDolar"
			],
			[
				"formata",
				"formata_total"
			],
			[
				"ger",
				"gera_linha"
			],
			[
				"for",
				"formata_recibo"
			],
			[
				"p",
				"price"
			],
			[
				"fo",
				"formataCentavos"
			],
			[
				"y",
				"y"
			],
			[
				"o",
				"ordena"
			],
			[
				"po",
				"Ponto"
			],
			[
				"re",
				"returnReta"
			],
			[
				"c",
				"c"
			],
			[
				"min",
				"minmax"
			],
			[
				"a",
				"a2"
			],
			[
				"i",
				"i"
			],
			[
				"som",
				"somaNTermosPG1"
			],
			[
				"n",
				"n-1"
			]
		]
	},
	"buffers":
	[
		{
			"file": "filagrafo.h",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Filagrafo.c",
			"settings":
			{
				"buffer_size": 1052,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ListA.c",
			"settings":
			{
				"buffer_size": 8467,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#ifndef LISTA_H_INCLUDED\n#define LISTA_H_INCLUDED\n\nstruct no{\n    int vertice;\n    int peso[4];\n    struct no *prox;\n};\ntypedef struct no No;\n\nstruct grafo{\n    int qtde_vertices, qtde_arestas;\n    int *grau;\n    No**aresta;\n};\n\ntypedef struct grafo Grafo;\n\nGrafo *cria_grafo(int n);\nint insere_aresta(Grafo *G,int v1,int v2,int capacidade, int custo, int delay, int trafego);\nint insere_arestaN(Grafo *G,int v1,int v2,int capacidade, int custo, int delay, int trafego);\nvoid mostra_grafo(Grafo *G);\nint verifica_aresta(Grafo *G,int v1,int v2);\nint remove_aresta(Grafo *G,int v1,int v2);\nint remove_arestaN(Grafo *G,int v1,int v2);\nint consulta_aresta(Grafo *G,int v1,int v2,int *capacidade, int * custo, int *delay, int * trafego);\nvoid libera_grafo(Grafo **G);\nvoid mostra_adjacentes(Grafo *G,int v);\nvoid busca_profundidade(Grafo *G,int v,int *visitados);\nvoid DPS(Grafo *G,int v);\nvoid busca_largura(Grafo *G,int v);\n#endif // LISTA_H_INCLUDED\n",
			"file": "ListA.h",
			"file_size": 852,
			"file_write_time": 131425949147941607,
			"settings":
			{
				"buffer_size": 948,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.c",
			"settings":
			{
				"buffer_size": 1410,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/gustavo/Área de Trabalho/2017 - 1/AED 2/Trabalho de programacao/Trabalho-de-AED2/Grafos/main.c",
		"/home/gustavo/Área de Trabalho/2017 - 1/AED 2/Trabalho de programacao/Trabalho-de-AED2/Grafos/grafo.c",
		"/home/gustavo/Área de Trabalho/2017 - 1/AED 2/Trabalho de programacao/Trabalho-de-AED2/Grafos/grafo.h",
		"/home/gustavo/Área de Trabalho/2017 - 1/AED 2/Trabalho de programacao/Trabalho-de-AED2/Grafos/teste.grafo",
		"/home/gustavo/Área de Trabalho/2017 - 1/AED 2/Trabalho de programacao/Trabalho-de-AED2/teste.grafo",
		"/home/gustavo/Área de Trabalho/2017 - 1/Pogramação funcional/Stack.hs",
		"/home/gustavo/Área de Trabalho/2017 - 1/Pogramação funcional/pratica 9-6.hs",
		"/home/gustavo/Área de Trabalho/2017 - 1/Pogramação funcional/trab highorder.hs",
		"/home/gustavo/Área de Trabalho/2017 - 1/Pogramação funcional/trab.hs",
		"/home/gustavo/Área de Trabalho/2017 - 1/PF/trab 2.hs",
		"/media/gustavo/FEA2F859A2F817BB/Google Drive/UFU/2017 - 1/Pogramação funcional/Lista1.hs",
		"/media/gustavo/FEA2F859A2F817BB/Google Drive/UFU/2017 - 1/Pogramação funcional/bissexto.hs"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"con",
			"mostra",
			"|",
			"(show)",
			"|",
			">",
			"==",
			"max",
			"min"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"(show)",
			"(<)",
			"(>)",
			"(==)",
			"<",
			">",
			"maior",
			"menor"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "filagrafo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Filagrafo.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1052,
						"regions":
						{
						},
						"selection":
						[
							[
								1052,
								1052
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 619.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ListA.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8467,
						"regions":
						{
						},
						"selection":
						[
							[
								3254,
								3254
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 472.0,
						"translation.y": 1685.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ListA.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 948,
						"regions":
						{
						},
						"selection":
						[
							[
								859,
								859
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1410,
						"regions":
						{
						},
						"selection":
						[
							[
								640,
								640
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Lista_de_Adjacencia.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
